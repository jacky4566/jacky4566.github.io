{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\AthabascaCPSCI\\\\COMP 486\\\\Mineral Mayhem\\\\src\\\\components\\\\level-layout\\\\LevelBackgroundTilesLayer.js\";\nimport MapCell from \"./MapCell\";\nimport { THEME_TILES_MAP, CELL_SIZE } from \"../../helpers/consts\";\nimport { Camera } from \"../../classes/Camera\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LevelBackgroundTilesLayer({\n  level,\n  cameraXY\n}) {\n  const cameraLefttile = max(0, -cameraXY[0] / CELL_SIZE);\n  const cameraRighttile = -cameraXY[0] / CELL_SIZE;\n  const cameraToptile = -cameraXY[1] / CELL_SIZE;\n  const cameraBottomttile = -cameraXY[1] / CELL_SIZE;\n  const widthWithWalls = level.tilesWidth + 1;\n  const heightWithWalls = level.tilesHeight + 1;\n  const tiles = THEME_TILES_MAP[level.theme];\n  console.log(\"cameraLefttile \" + cameraLefttile);\n  function getBackgroundTile(x, y) {\n    if (x === 0) {\n      return tiles.LEFT;\n    }\n    if (x === widthWithWalls) {\n      return tiles.RIGHT;\n    }\n    if (y === 0) {\n      return tiles.TOP;\n    }\n    if (y === heightWithWalls) {\n      return tiles.BOTTOM;\n    }\n    return tiles.FLOOR;\n  }\n  let canvases = [];\n  for (let y = 0; y <= heightWithWalls; y++) {\n    for (let x = 0; x <= widthWithWalls; x++) {\n      // Skip Bottom Left and Bottom Right for intentional blank tiles in those corners\n      if (y === heightWithWalls) {\n        if (x === 0 || x === widthWithWalls) {\n          continue;\n        }\n      }\n\n      // add a cell to the map\n      canvases.push( /*#__PURE__*/_jsxDEV(MapCell, {\n        x: x,\n        y: y,\n        frameCoord: getBackgroundTile(x, y)\n      }, `${x}_${y}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: canvases\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n}\n_c = LevelBackgroundTilesLayer;\nvar _c;\n$RefreshReg$(_c, \"LevelBackgroundTilesLayer\");","map":{"version":3,"names":["MapCell","THEME_TILES_MAP","CELL_SIZE","Camera","jsxDEV","_jsxDEV","LevelBackgroundTilesLayer","level","cameraXY","cameraLefttile","max","cameraRighttile","cameraToptile","cameraBottomttile","widthWithWalls","tilesWidth","heightWithWalls","tilesHeight","tiles","theme","console","log","getBackgroundTile","x","y","LEFT","RIGHT","TOP","BOTTOM","FLOOR","canvases","push","frameCoord","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/GitHub/AthabascaCPSCI/COMP 486/Mineral Mayhem/src/components/level-layout/LevelBackgroundTilesLayer.js"],"sourcesContent":["import MapCell from \"./MapCell\";\r\nimport { THEME_TILES_MAP, CELL_SIZE } from \"../../helpers/consts\";\r\nimport { Camera } from \"../../classes/Camera\";\r\n\r\nexport default function LevelBackgroundTilesLayer({ level, cameraXY }) {\r\n  const cameraLefttile = max(0, -cameraXY[0] / CELL_SIZE);\r\n  const cameraRighttile = -cameraXY[0] / CELL_SIZE;\r\n  const cameraToptile = -cameraXY[1] / CELL_SIZE;\r\n  const cameraBottomttile = -cameraXY[1] / CELL_SIZE;\r\n  const widthWithWalls = level.tilesWidth + 1;\r\n  const heightWithWalls = level.tilesHeight + 1;\r\n  const tiles = THEME_TILES_MAP[level.theme];\r\n\r\n  console.log(\"cameraLefttile \" + cameraLefttile);\r\n\r\n  function getBackgroundTile(x, y) {\r\n    if (x === 0) {\r\n      return tiles.LEFT;\r\n    }\r\n    if (x === widthWithWalls) {\r\n      return tiles.RIGHT;\r\n    }\r\n    if (y === 0) {\r\n      return tiles.TOP;\r\n    }\r\n    if (y === heightWithWalls) {\r\n      return tiles.BOTTOM;\r\n    }\r\n    return tiles.FLOOR;\r\n  }\r\n\r\n  let canvases = [];\r\n  for (let y = 0; y <= heightWithWalls; y++) {\r\n    for (let x = 0; x <= widthWithWalls; x++) {\r\n      // Skip Bottom Left and Bottom Right for intentional blank tiles in those corners\r\n      if (y === heightWithWalls) {\r\n        if (x === 0 || x === widthWithWalls) {\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // add a cell to the map\r\n      canvases.push(\r\n        <MapCell\r\n          key={`${x}_${y}`}\r\n          x={x}\r\n          y={y}\r\n          frameCoord={getBackgroundTile(x, y)}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  return <div>{canvases}</div>;\r\n}"],"mappings":";AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,SAASC,eAAe,EAAEC,SAAS,QAAQ,sBAAsB;AACjE,SAASC,MAAM,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,yBAAyBA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EACrE,MAAMC,cAAc,GAAGC,GAAG,CAAC,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC,CAAC,GAAGN,SAAS,CAAC;EACvD,MAAMS,eAAe,GAAG,CAACH,QAAQ,CAAC,CAAC,CAAC,GAAGN,SAAS;EAChD,MAAMU,aAAa,GAAG,CAACJ,QAAQ,CAAC,CAAC,CAAC,GAAGN,SAAS;EAC9C,MAAMW,iBAAiB,GAAG,CAACL,QAAQ,CAAC,CAAC,CAAC,GAAGN,SAAS;EAClD,MAAMY,cAAc,GAAGP,KAAK,CAACQ,UAAU,GAAG,CAAC;EAC3C,MAAMC,eAAe,GAAGT,KAAK,CAACU,WAAW,GAAG,CAAC;EAC7C,MAAMC,KAAK,GAAGjB,eAAe,CAACM,KAAK,CAACY,KAAK,CAAC;EAE1CC,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGZ,cAAc,CAAC;EAE/C,SAASa,iBAAiBA,CAACC,CAAC,EAAEC,CAAC,EAAE;IAC/B,IAAID,CAAC,KAAK,CAAC,EAAE;MACX,OAAOL,KAAK,CAACO,IAAI;IACnB;IACA,IAAIF,CAAC,KAAKT,cAAc,EAAE;MACxB,OAAOI,KAAK,CAACQ,KAAK;IACpB;IACA,IAAIF,CAAC,KAAK,CAAC,EAAE;MACX,OAAON,KAAK,CAACS,GAAG;IAClB;IACA,IAAIH,CAAC,KAAKR,eAAe,EAAE;MACzB,OAAOE,KAAK,CAACU,MAAM;IACrB;IACA,OAAOV,KAAK,CAACW,KAAK;EACpB;EAEA,IAAIC,QAAQ,GAAG,EAAE;EACjB,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIR,eAAe,EAAEQ,CAAC,EAAE,EAAE;IACzC,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIT,cAAc,EAAES,CAAC,EAAE,EAAE;MACxC;MACA,IAAIC,CAAC,KAAKR,eAAe,EAAE;QACzB,IAAIO,CAAC,KAAK,CAAC,IAAIA,CAAC,KAAKT,cAAc,EAAE;UACnC;QACF;MACF;;MAEA;MACAgB,QAAQ,CAACC,IAAI,eACX1B,OAAA,CAACL,OAAO;QAENuB,CAAC,EAAEA,CAAE;QACLC,CAAC,EAAEA,CAAE;QACLQ,UAAU,EAAEV,iBAAiB,CAACC,CAAC,EAAEC,CAAC;MAAE,GAH9B,GAAED,CAAE,IAAGC,CAAE,EAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIjB,CACH,CAAC;IACH;EACF;EAEA,oBAAO/B,OAAA;IAAAgC,QAAA,EAAMP;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC9B;AAACE,EAAA,GAlDuBhC,yBAAyB;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}