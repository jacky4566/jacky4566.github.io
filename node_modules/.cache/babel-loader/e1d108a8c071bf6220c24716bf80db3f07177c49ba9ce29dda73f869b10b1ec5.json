{"ast":null,"code":"import { PLACEMENT_TYPE_HERO } from \"../helpers/consts\";\nimport { placementFactory } from \"./PlacementFactory\";\nimport { GameLoop } from \"./GameLoop\";\nimport { DirectionControls } from \"./DirectionControls\";\nimport LevelsMap from \"../levels/LevelsMap\";\nimport { Inventory } from \"./Inventory\";\nimport { Camera } from \"./Camera\";\nimport LevelGenerator from \"../components/level-layout/LevelGenerator\";\nexport class LevelState {\n  constructor(levelId, onEmit) {\n    this.id = levelId;\n    this.onEmit = onEmit;\n    this.directionControls = new DirectionControls();\n\n    //Start the level!\n    this.start();\n  }\n  start() {\n    /* Default level stuff */\n    this.isCompleted = false;\n    this.deathOutcome = null;\n    const levelData = LevelsMap[this.id];\n\n    /* Fill in map with RNG and Background */\n    this.placements = LevelGenerator(levelData);\n\n    /* Copy rest of level data */\n    this.theme = levelData.theme;\n    this.tilesWidth = levelData.tilesWidth;\n    this.tilesHeight = levelData.tilesHeight;\n\n    /* Generate Placements */\n    this.placements = this.placements.map(config => {\n      return placementFactory.createPlacement(config, this);\n    });\n\n    // Create a fresh inventory\n    this.inventory = new Inventory();\n\n    // Cache a reference to the hero\n    this.heroRef = this.placements.find(p => p.type === PLACEMENT_TYPE_HERO);\n\n    // Create a camera\n    this.camera = new Camera(this);\n    this.startGameLoop();\n  }\n  setDeathOutcome(causeOfDeath) {\n    this.deathOutcome = causeOfDeath;\n    this.gameLoop.stop();\n  }\n  startGameLoop() {\n    var _this$gameLoop;\n    (_this$gameLoop = this.gameLoop) === null || _this$gameLoop === void 0 ? void 0 : _this$gameLoop.stop();\n    this.gameLoop = new GameLoop(() => {\n      this.tick();\n    });\n  }\n  addPlacement(config) {\n    this.placements.push(placementFactory.createPlacement(config, this));\n  }\n  deletePlacement(placementToRemove) {\n    this.placements = this.placements.filter(p => {\n      return p.id !== placementToRemove.id;\n    });\n  }\n  tick() {\n    // Check for movement here...\n    if (this.directionControls.direction) {\n      this.heroRef.controllerMoveRequested(this.directionControls.direction);\n    }\n\n    // Call 'tick' on any Placement that wants to update\n    this.placements.forEach(placement => {\n      placement.tick();\n    });\n\n    // Update the camera\n    this.camera.tick();\n\n    //Emit any changes to React\n    this.onEmit(this.getState());\n  }\n  isPositionOutOfBounds(x, y) {\n    return x === 0 || y === 0 || x >= this.tilesWidth + 1 || y >= this.tilesHeight + 1;\n  }\n  completeLevel() {\n    this.isCompleted = true;\n    this.gameLoop.stop();\n  }\n  getState() {\n    return {\n      theme: this.theme,\n      tilesWidth: this.tilesWidth,\n      tilesHeight: this.tilesHeight,\n      placements: this.placements,\n      deathOutcome: this.deathOutcome,\n      isCompleted: this.isCompleted,\n      cameraTransform: this.camera.transform,\n      inventory: this.inventory,\n      restart: () => {\n        this.start();\n      }\n    };\n  }\n  destroy() {\n    // Tear down the level.\n    this.gameLoop.stop();\n    this.directionControls.unbind();\n  }\n}","map":{"version":3,"names":["PLACEMENT_TYPE_HERO","placementFactory","GameLoop","DirectionControls","LevelsMap","Inventory","Camera","LevelGenerator","LevelState","constructor","levelId","onEmit","id","directionControls","start","isCompleted","deathOutcome","levelData","placements","theme","tilesWidth","tilesHeight","map","config","createPlacement","inventory","heroRef","find","p","type","camera","startGameLoop","setDeathOutcome","causeOfDeath","gameLoop","stop","_this$gameLoop","tick","addPlacement","push","deletePlacement","placementToRemove","filter","direction","controllerMoveRequested","forEach","placement","getState","isPositionOutOfBounds","x","y","completeLevel","cameraTransform","transform","restart","destroy","unbind"],"sources":["C:/GitHub/AthabascaCPSCI/COMP 486/Mineral Mayhem/src/classes/LevelState.js"],"sourcesContent":["import { PLACEMENT_TYPE_HERO } from \"../helpers/consts\";\r\nimport { placementFactory } from \"./PlacementFactory\";\r\nimport { GameLoop } from \"./GameLoop\";\r\nimport { DirectionControls } from \"./DirectionControls\";\r\nimport LevelsMap from \"../levels/LevelsMap\";\r\nimport { Inventory } from \"./Inventory\";\r\nimport { Camera } from \"./Camera\";\r\nimport LevelGenerator from \"../components/level-layout/LevelGenerator\";\r\n\r\nexport class LevelState {\r\n  constructor(levelId, onEmit) {\r\n    this.id = levelId;\r\n    this.onEmit = onEmit;\r\n    this.directionControls = new DirectionControls();\r\n\r\n    //Start the level!\r\n    this.start();\r\n  }\r\n\r\n  start() {\r\n    /* Default level stuff */\r\n    this.isCompleted = false;\r\n    this.deathOutcome = null;\r\n    const levelData = LevelsMap[this.id];\r\n\r\n    /* Fill in map with RNG and Background */\r\n    this.placements = LevelGenerator(levelData);\r\n\r\n    /* Copy rest of level data */\r\n    this.theme = levelData.theme;\r\n    this.tilesWidth = levelData.tilesWidth;\r\n    this.tilesHeight = levelData.tilesHeight;\r\n\r\n    /* Generate Placements */\r\n    this.placements = this.placements.map((config) => {\r\n      return placementFactory.createPlacement(config, this);\r\n    });\r\n\r\n    // Create a fresh inventory\r\n    this.inventory = new Inventory();\r\n\r\n    // Cache a reference to the hero\r\n    this.heroRef = this.placements.find((p) => p.type === PLACEMENT_TYPE_HERO);\r\n\r\n    // Create a camera\r\n    this.camera = new Camera(this);\r\n\r\n    this.startGameLoop();\r\n  }\r\n\r\n  setDeathOutcome(causeOfDeath) {\r\n    this.deathOutcome = causeOfDeath;\r\n    this.gameLoop.stop();\r\n  }\r\n\r\n  startGameLoop() {\r\n    this.gameLoop?.stop();\r\n    this.gameLoop = new GameLoop(() => {\r\n      this.tick();\r\n    });\r\n  }\r\n\r\n  addPlacement(config) {\r\n    this.placements.push(placementFactory.createPlacement(config, this));\r\n  }\r\n\r\n  deletePlacement(placementToRemove) {\r\n    this.placements = this.placements.filter((p) => {\r\n      return p.id !== placementToRemove.id;\r\n    });\r\n  }\r\n\r\n  tick() {\r\n    // Check for movement here...\r\n    if (this.directionControls.direction) {\r\n      this.heroRef.controllerMoveRequested(this.directionControls.direction);\r\n    }\r\n\r\n    // Call 'tick' on any Placement that wants to update\r\n    this.placements.forEach((placement) => {\r\n      placement.tick();\r\n    });\r\n\r\n    // Update the camera\r\n    this.camera.tick();\r\n\r\n    //Emit any changes to React\r\n    this.onEmit(this.getState());\r\n  }\r\n\r\n  isPositionOutOfBounds(x, y) {\r\n    return (\r\n      x === 0 ||\r\n      y === 0 ||\r\n      x >= this.tilesWidth + 1 ||\r\n      y >= this.tilesHeight + 1\r\n    );\r\n  }\r\n\r\n  completeLevel() {\r\n    this.isCompleted = true;\r\n    this.gameLoop.stop();\r\n  }\r\n\r\n  getState() {\r\n    return {\r\n      theme: this.theme,\r\n      tilesWidth: this.tilesWidth,\r\n      tilesHeight: this.tilesHeight,\r\n      placements: this.placements,\r\n      deathOutcome: this.deathOutcome,\r\n      isCompleted: this.isCompleted,\r\n      cameraTransform: this.camera.transform,\r\n      inventory: this.inventory,\r\n      restart: () => {\r\n        this.start();\r\n      },\r\n    };\r\n  }\r\n\r\n  destroy() {\r\n    // Tear down the level.\r\n    this.gameLoop.stop();\r\n    this.directionControls.unbind();\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}