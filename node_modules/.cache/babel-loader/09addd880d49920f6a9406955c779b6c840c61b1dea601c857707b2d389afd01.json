{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\AthabascaCPSCI\\\\COMP 486\\\\Mineral Mayhem\\\\mineralmayhem\\\\src\\\\game-objects\\\\HeroPlacement.js\";\nimport { Placement } from \"./Placement\";\nimport Hero from \"../components/object-graphics/Hero\";\nimport { DIRECTION_LEFT, DIRECTION_RIGHT, directionUpdateMap, BODY_SKINS, HERO_RUN_1, HERO_RUN_2 } from \"../helpers/consts\";\nimport { TILES } from \"../helpers/tiles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst heroSkinMap = {\n  [BODY_SKINS.NORMAL]: [TILES.HERO_LEFT, TILES.HERO_RIGHT],\n  [HERO_RUN_1]: [TILES.HERO_RUN_1_LEFT, TILES.HERO_RUN_1_RIGHT],\n  [HERO_RUN_2]: [TILES.HERO_RUN_2_LEFT, TILES.HERO_RUN_2_RIGHT]\n};\nexport class HeroPlacement extends Placement {\n  controllerMoveRequested(direction) {\n    //Attempt to start moving\n    if (this.movingPixelsRemaining > 0) {\n      return;\n    }\n\n    //Make sure the next space is available\n    const canMove = this.canMoveToNextDestination(direction);\n    if (!canMove) {\n      return;\n    }\n\n    //Start the move\n    this.movingPixelsRemaining = 16;\n    this.movingPixelDirection = direction;\n    this.updateFacingDirection();\n    this.updateWalkFrame();\n  }\n  updateFacingDirection() {\n    if (this.movingPixelDirection === DIRECTION_LEFT || this.movingPixelDirection === DIRECTION_RIGHT) {\n      this.spriteFacingDirection = this.movingPixelDirection;\n    }\n  }\n  updateWalkFrame() {\n    this.spriteWalkFrame = this.spriteWalkFrame === 1 ? 0 : 1;\n  }\n  tick() {\n    this.tickMovingPixelProgress();\n  }\n  getFrame() {\n    //Which frame to show?\n    const index = this.spriteFacingDirection === DIRECTION_LEFT ? 0 : 1;\n\n    //Use correct walking frame per direction\n    if (this.movingPixelsRemaining > 0) {\n      const walkKey = this.spriteWalkFrame === 0 ? HERO_RUN_1 : HERO_RUN_2;\n      return heroSkinMap[walkKey][index];\n    }\n    return heroSkinMap[BODY_SKINS.NORMAL][index];\n  }\n  getYTranslate() {\n    // Stand on ground when not moving\n    if (this.movingPixelsRemaining === 0) {\n      return 0;\n    }\n\n    //Elevate ramp up or down at beginning/end of movement\n    const PIXELS_FROM_END = 2;\n    if (this.movingPixelsRemaining < PIXELS_FROM_END || this.movingPixelsRemaining > 16 - PIXELS_FROM_END) {\n      return -1;\n    }\n\n    // Highest in the middle of the movement\n    return -2;\n  }\n  tickMovingPixelProgress() {\n    if (this.movingPixelsRemaining === 0) {\n      return;\n    }\n    this.movingPixelsRemaining -= this.travelPixelsPerFrame;\n    if (this.movingPixelsRemaining <= 0) {\n      this.movingPixelsRemaining = 0;\n      this.onDoneMoving();\n    }\n  }\n  onDoneMoving() {\n    //Update my x/y!\n    const {\n      x,\n      y\n    } = directionUpdateMap[this.movingPixelDirection];\n    this.x += x;\n    this.y += y;\n  }\n  renderComponent() {\n    return /*#__PURE__*/_jsxDEV(Hero, {\n      frameCoord: this.getFrame(),\n      yTranslate: this.getYTranslate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["Placement","Hero","DIRECTION_LEFT","DIRECTION_RIGHT","directionUpdateMap","BODY_SKINS","HERO_RUN_1","HERO_RUN_2","TILES","jsxDEV","_jsxDEV","heroSkinMap","NORMAL","HERO_LEFT","HERO_RIGHT","HERO_RUN_1_LEFT","HERO_RUN_1_RIGHT","HERO_RUN_2_LEFT","HERO_RUN_2_RIGHT","HeroPlacement","controllerMoveRequested","direction","movingPixelsRemaining","canMove","canMoveToNextDestination","movingPixelDirection","updateFacingDirection","updateWalkFrame","spriteFacingDirection","spriteWalkFrame","tick","tickMovingPixelProgress","getFrame","index","walkKey","getYTranslate","PIXELS_FROM_END","travelPixelsPerFrame","onDoneMoving","x","y","renderComponent","frameCoord","yTranslate","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/GitHub/AthabascaCPSCI/COMP 486/Mineral Mayhem/mineralmayhem/src/game-objects/HeroPlacement.js"],"sourcesContent":["import { Placement } from \"./Placement\";\r\nimport Hero from \"../components/object-graphics/Hero\";\r\nimport {\r\n  DIRECTION_LEFT,\r\n  DIRECTION_RIGHT,\r\n  directionUpdateMap,\r\n  BODY_SKINS,\r\n  HERO_RUN_1,\r\n  HERO_RUN_2,\r\n} from \"../helpers/consts\";\r\nimport { TILES } from \"../helpers/tiles\";\r\n\r\nconst heroSkinMap = {\r\n  [BODY_SKINS.NORMAL]: [TILES.HERO_LEFT, TILES.HERO_RIGHT],\r\n  [HERO_RUN_1]: [TILES.HERO_RUN_1_LEFT, TILES.HERO_RUN_1_RIGHT],\r\n  [HERO_RUN_2]: [TILES.HERO_RUN_2_LEFT, TILES.HERO_RUN_2_RIGHT],\r\n};\r\n\r\nexport class HeroPlacement extends Placement {\r\n  controllerMoveRequested(direction) {\r\n    //Attempt to start moving\r\n    if (this.movingPixelsRemaining > 0) {\r\n      return;\r\n    }\r\n\r\n    //Make sure the next space is available\r\n    const canMove = this.canMoveToNextDestination(direction);\r\n    if (!canMove) {\r\n      return;\r\n    }\r\n\r\n    //Start the move\r\n    this.movingPixelsRemaining = 16;\r\n    this.movingPixelDirection = direction;\r\n    this.updateFacingDirection();\r\n    this.updateWalkFrame();\r\n  }\r\n\r\n  updateFacingDirection() {\r\n    if (\r\n      this.movingPixelDirection === DIRECTION_LEFT ||\r\n      this.movingPixelDirection === DIRECTION_RIGHT\r\n    ) {\r\n      this.spriteFacingDirection = this.movingPixelDirection;\r\n    }\r\n  }\r\n\r\n  updateWalkFrame() {\r\n    this.spriteWalkFrame = this.spriteWalkFrame === 1 ? 0 : 1;\r\n  }\r\n\r\n  tick() {\r\n    this.tickMovingPixelProgress();\r\n  }\r\n\r\n  getFrame() {\r\n    //Which frame to show?\r\n    const index = this.spriteFacingDirection === DIRECTION_LEFT ? 0 : 1;\r\n\r\n    //Use correct walking frame per direction\r\n    if (this.movingPixelsRemaining > 0) {\r\n      const walkKey = this.spriteWalkFrame === 0 ? HERO_RUN_1 : HERO_RUN_2;\r\n      return heroSkinMap[walkKey][index];\r\n    }\r\n\r\n    return heroSkinMap[BODY_SKINS.NORMAL][index];\r\n  }\r\n\r\n  getYTranslate() {\r\n    // Stand on ground when not moving\r\n    if (this.movingPixelsRemaining === 0) {\r\n      return 0;\r\n    }\r\n\r\n    //Elevate ramp up or down at beginning/end of movement\r\n    const PIXELS_FROM_END = 2;\r\n    if (\r\n      this.movingPixelsRemaining < PIXELS_FROM_END ||\r\n      this.movingPixelsRemaining > 16 - PIXELS_FROM_END\r\n    ) {\r\n      return -1;\r\n    }\r\n\r\n    // Highest in the middle of the movement\r\n    return -2;\r\n  }\r\n\r\n  tickMovingPixelProgress() {\r\n    if (this.movingPixelsRemaining === 0) {\r\n      return;\r\n    }\r\n    this.movingPixelsRemaining -= this.travelPixelsPerFrame;\r\n    if (this.movingPixelsRemaining <= 0) {\r\n      this.movingPixelsRemaining = 0;\r\n      this.onDoneMoving();\r\n    }\r\n  }\r\n\r\n  onDoneMoving() {\r\n    //Update my x/y!\r\n    const { x, y } = directionUpdateMap[this.movingPixelDirection];\r\n    this.x += x;\r\n    this.y += y;\r\n  }\r\n\r\n  renderComponent() {\r\n    return (\r\n      <Hero frameCoord={this.getFrame()} yTranslate={this.getYTranslate()} />\r\n    );\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}