{"ast":null,"code":"import { DIRECTION_UP, DIRECTION_DOWN, DIRECTION_RIGHT, DIRECTION_LEFT } from \"../helpers/consts\";\n\n/* A utility function to calculate area of triangle formed by (x1, y1), \r\n(x2, y2) and (x3, y3) */\nfunction area(x1, y1, x2, y2, x3, y3) {\n  return Math.abs((x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2)) / 2.0);\n}\n\n/* A function to check whether point P(x, y) lies inside the triangle formed \r\nby A(x1, y1), B(x2, y2) and C(x3, y3) */\nfunction isInside(x1, y1, x2, y2, x3, y3, x, y) {\n  /* Calculate area of triangle ABC */\n  let A = area(x1, y1, x2, y2, x3, y3);\n\n  /* Calculate area of triangle PBC */\n  let A1 = area(x, y, x2, y2, x3, y3);\n\n  /* Calculate area of triangle PAC */\n  let A2 = area(x1, y1, x, y, x3, y3);\n\n  /* Calculate area of triangle PAB */\n  let A3 = area(x1, y1, x2, y2, x, y);\n\n  /* Check if sum of A1, A2 and A3 is same as A */\n  return A == A1 + A2 + A3;\n}\nexport class DirectionControls {\n  constructor() {\n    this.directionKeys = {\n      ArrowDown: DIRECTION_DOWN,\n      ArrowUp: DIRECTION_UP,\n      ArrowLeft: DIRECTION_LEFT,\n      ArrowRight: DIRECTION_RIGHT,\n      s: DIRECTION_DOWN,\n      w: DIRECTION_UP,\n      a: DIRECTION_LEFT,\n      d: DIRECTION_RIGHT\n    };\n    this.heldDirections = [];\n    function parseTouch(touch) {\n      if (touch) {\n        console.log(touch);\n        if (isInside(0, window.innerHeight, window.innerWidth / 2, window.innerHeight / 2, window.innerWidth, window.innerHeight, touch.clientX, touch.clientY)) return DIRECTION_DOWN;\n      }\n    }\n    this.directionKeyDownHandler = e => {\n      const dir = this.directionKeys[e.key];\n      if (dir && this.heldDirections.indexOf(dir) === -1) {\n        this.heldDirections.unshift(dir);\n      }\n    };\n    this.directionKeyUpHandler = e => {\n      const dir = this.directionKeys[e.key];\n      const index = this.heldDirections.indexOf(dir);\n      if (index > -1) {\n        this.heldDirections.splice(index, 1);\n      }\n    };\n    this.touchKeyDownHandler = e => {\n      const dir = parseTouch(e.touches[0]);\n      console.log(dir);\n      if (dir && this.heldDirections.indexOf(dir) === -1) {\n        this.heldDirections.unshift(dir);\n      }\n    };\n    this.touchKeyUpHandler = e => {\n      const dir = parseTouch(e.touches[0]);\n      const index = this.heldDirections.indexOf(dir);\n      if (index > -1) {\n        this.heldDirections.splice(index, 1);\n      }\n    };\n    document.addEventListener(\"keydown\", this.directionKeyDownHandler);\n    document.addEventListener(\"keyup\", this.directionKeyUpHandler);\n    document.addEventListener(\"touchstart\", this.touchKeyDownHandler);\n    document.addEventListener(\"touchend\", this.touchKeyUpHandler);\n  }\n  get direction() {\n    return this.heldDirections[0];\n  }\n  unbind() {\n    document.removeEventListener(\"keydown\", this.directionKeyDownHandler);\n    document.removeEventListener(\"keyup\", this.directionKeyUpHandler);\n  }\n}","map":{"version":3,"names":["DIRECTION_UP","DIRECTION_DOWN","DIRECTION_RIGHT","DIRECTION_LEFT","area","x1","y1","x2","y2","x3","y3","Math","abs","isInside","x","y","A","A1","A2","A3","DirectionControls","constructor","directionKeys","ArrowDown","ArrowUp","ArrowLeft","ArrowRight","s","w","a","d","heldDirections","parseTouch","touch","console","log","window","innerHeight","innerWidth","clientX","clientY","directionKeyDownHandler","e","dir","key","indexOf","unshift","directionKeyUpHandler","index","splice","touchKeyDownHandler","touches","touchKeyUpHandler","document","addEventListener","direction","unbind","removeEventListener"],"sources":["C:/GitHub/AthabascaCPSCI/COMP 486/Mineral Mayhem/src/classes/DirectionControls.js"],"sourcesContent":["import {\r\n  DIRECTION_UP,\r\n  DIRECTION_DOWN,\r\n  DIRECTION_RIGHT,\r\n  DIRECTION_LEFT,\r\n} from \"../helpers/consts\";\r\n\r\n/* A utility function to calculate area of triangle formed by (x1, y1), \r\n(x2, y2) and (x3, y3) */\r\nfunction area(x1, y1, x2, y2, x3, y3) {\r\n  return Math.abs((x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2)) / 2.0);\r\n}\r\n\r\n/* A function to check whether point P(x, y) lies inside the triangle formed \r\nby A(x1, y1), B(x2, y2) and C(x3, y3) */\r\nfunction isInside(x1, y1, x2, y2, x3, y3, x, y) {\r\n  /* Calculate area of triangle ABC */\r\n  let A = area(x1, y1, x2, y2, x3, y3);\r\n\r\n  /* Calculate area of triangle PBC */\r\n  let A1 = area(x, y, x2, y2, x3, y3);\r\n\r\n  /* Calculate area of triangle PAC */\r\n  let A2 = area(x1, y1, x, y, x3, y3);\r\n\r\n  /* Calculate area of triangle PAB */\r\n  let A3 = area(x1, y1, x2, y2, x, y);\r\n\r\n  /* Check if sum of A1, A2 and A3 is same as A */\r\n  return (A == A1 + A2 + A3);\r\n}\r\n\r\nexport class DirectionControls {\r\n  constructor() {\r\n    this.directionKeys = {\r\n      ArrowDown: DIRECTION_DOWN,\r\n      ArrowUp: DIRECTION_UP,\r\n      ArrowLeft: DIRECTION_LEFT,\r\n      ArrowRight: DIRECTION_RIGHT,\r\n      s: DIRECTION_DOWN,\r\n      w: DIRECTION_UP,\r\n      a: DIRECTION_LEFT,\r\n      d: DIRECTION_RIGHT,\r\n    };\r\n    this.heldDirections = [];\r\n\r\n    function parseTouch(touch) {\r\n      if (touch) {\r\n        console.log(touch);\r\n        if (isInside(0, window.innerHeight, window.innerWidth / 2, window.innerHeight / 2, window.innerWidth, window.innerHeight, touch.clientX, touch.clientY))\r\n          return DIRECTION_DOWN;\r\n      }\r\n    }\r\n\r\n    this.directionKeyDownHandler = (e) => {\r\n      const dir = this.directionKeys[e.key];\r\n      if (dir && this.heldDirections.indexOf(dir) === -1) {\r\n        this.heldDirections.unshift(dir);\r\n      }\r\n    };\r\n\r\n    this.directionKeyUpHandler = (e) => {\r\n      const dir = this.directionKeys[e.key];\r\n      const index = this.heldDirections.indexOf(dir);\r\n      if (index > -1) {\r\n        this.heldDirections.splice(index, 1);\r\n      }\r\n    };\r\n\r\n    this.touchKeyDownHandler = (e) => {\r\n      const dir = parseTouch(e.touches[0]);\r\n      console.log(dir);\r\n      if (dir && this.heldDirections.indexOf(dir) === -1) {\r\n        this.heldDirections.unshift(dir);\r\n      }\r\n    };\r\n\r\n    this.touchKeyUpHandler = (e) => {\r\n      const dir = parseTouch(e.touches[0]);\r\n      const index = this.heldDirections.indexOf(dir);\r\n      if (index > -1) {\r\n        this.heldDirections.splice(index, 1);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"keydown\", this.directionKeyDownHandler);\r\n    document.addEventListener(\"keyup\", this.directionKeyUpHandler);\r\n    document.addEventListener(\"touchstart\", this.touchKeyDownHandler);\r\n    document.addEventListener(\"touchend\", this.touchKeyUpHandler);\r\n  }\r\n\r\n  get direction() {\r\n    return this.heldDirections[0];\r\n  }\r\n\r\n  unbind() {\r\n    document.removeEventListener(\"keydown\", this.directionKeyDownHandler);\r\n    document.removeEventListener(\"keyup\", this.directionKeyUpHandler);\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}