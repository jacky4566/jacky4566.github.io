{"ast":null,"code":"import { CELL_SIZE } from \"../helpers/consts\";\nimport { DIRECTION_RIGHT, DIRECTION_LEFT, DIRECTION_UP, DIRECTION_DOWN } from \"../helpers/consts\";\nconst CAMERA_SPEED = 0.02;\nconst CAMERA_LOOKAHEAD = 3;\nconst USE_SMOOTH_CAMERA = true;\nexport class Camera {\n  constructor(level) {\n    this.level = level;\n    const [heroX, heroY] = this.level.heroRef.displayXY();\n    this.cameraX = heroX;\n    this.cameraY = heroY;\n  }\n  get transform() {\n    this.pixelSize = getComputedStyle(document.documentElement).getPropertyValue('--pixel-size');\n    this.transformOffsetX = window.innerWidth / 2;\n    this.transformOffsetY = window.innerHeight / 2 - CELL_SIZE * 2;\n    return [this.cameraX, this.cameraY, this.transformOffsetX, this.transformOffsetY];\n  }\n  static lerp(currentValue, destinationValue, time) {\n    return currentValue * (1 - time) + destinationValue * time;\n  }\n  tick() {\n    // Start where the Hero is now\n    const hero = this.level.heroRef;\n    const [heroX, heroY] = hero.displayXY();\n    let cameraDestinationX = heroX;\n    let cameraDestinationY = heroY;\n\n    //If moving, put the camera slightly ahead of where Hero is going\n    if (hero.movingPixelsRemaining > 0) {\n      if (hero.movingPixelDirection === DIRECTION_DOWN) {\n        cameraDestinationY += CAMERA_LOOKAHEAD * CELL_SIZE;\n      } else if (hero.movingPixelDirection === DIRECTION_UP) {\n        cameraDestinationY -= CAMERA_LOOKAHEAD * CELL_SIZE;\n      } else if (hero.movingPixelDirection === DIRECTION_LEFT) {\n        cameraDestinationX -= CAMERA_LOOKAHEAD * CELL_SIZE;\n      } else if (hero.movingPixelDirection === DIRECTION_RIGHT) {\n        cameraDestinationX += CAMERA_LOOKAHEAD * CELL_SIZE;\n      }\n    }\n    if (USE_SMOOTH_CAMERA) {\n      this.cameraX = Camera.lerp(this.cameraX, cameraDestinationX, CAMERA_SPEED);\n      this.cameraY = Camera.lerp(this.cameraY, cameraDestinationY, CAMERA_SPEED);\n    } else {\n      this.cameraX = cameraDestinationX;\n      this.cameraY = cameraDestinationY;\n    }\n  }\n}","map":{"version":3,"names":["CELL_SIZE","DIRECTION_RIGHT","DIRECTION_LEFT","DIRECTION_UP","DIRECTION_DOWN","CAMERA_SPEED","CAMERA_LOOKAHEAD","USE_SMOOTH_CAMERA","Camera","constructor","level","heroX","heroY","heroRef","displayXY","cameraX","cameraY","transform","pixelSize","getComputedStyle","document","documentElement","getPropertyValue","transformOffsetX","window","innerWidth","transformOffsetY","innerHeight","lerp","currentValue","destinationValue","time","tick","hero","cameraDestinationX","cameraDestinationY","movingPixelsRemaining","movingPixelDirection"],"sources":["C:/GitHub/AthabascaCPSCI/COMP 486/Mineral Mayhem/src/classes/Camera.js"],"sourcesContent":["import { CELL_SIZE } from \"../helpers/consts\";\r\nimport {\r\n  DIRECTION_RIGHT,\r\n  DIRECTION_LEFT,\r\n  DIRECTION_UP,\r\n  DIRECTION_DOWN,\r\n} from \"../helpers/consts\";\r\n\r\nconst CAMERA_SPEED = 0.02;\r\nconst CAMERA_LOOKAHEAD = 3;\r\nconst USE_SMOOTH_CAMERA = true;\r\n\r\nexport class Camera {\r\n  constructor(level) {\r\n    this.level = level;\r\n    const [heroX, heroY] = this.level.heroRef.displayXY();\r\n    this.cameraX = heroX;\r\n    this.cameraY = heroY;\r\n  }\r\n\r\n  get transform() {\r\n    this.pixelSize = getComputedStyle(document.documentElement).getPropertyValue('--pixel-size');\r\n\r\n    this.transformOffsetX = (window.innerWidth / 2);\r\n    this.transformOffsetY = (window.innerHeight / 2) - (CELL_SIZE * 2);\r\n    return [this.cameraX, this.cameraY, this.transformOffsetX, this.transformOffsetY]\r\n  }\r\n\r\n  static lerp(currentValue, destinationValue, time) {\r\n    return currentValue * (1 - time) + destinationValue * time;\r\n  }\r\n\r\n  tick() {\r\n    // Start where the Hero is now\r\n    const hero = this.level.heroRef;\r\n    const [heroX, heroY] = hero.displayXY();\r\n    let cameraDestinationX = heroX;\r\n    let cameraDestinationY = heroY;\r\n\r\n    //If moving, put the camera slightly ahead of where Hero is going\r\n    if (hero.movingPixelsRemaining > 0) {\r\n      if (hero.movingPixelDirection === DIRECTION_DOWN) {\r\n        cameraDestinationY += CAMERA_LOOKAHEAD * CELL_SIZE;\r\n      } else if (hero.movingPixelDirection === DIRECTION_UP) {\r\n        cameraDestinationY -= CAMERA_LOOKAHEAD * CELL_SIZE;\r\n      } else if (hero.movingPixelDirection === DIRECTION_LEFT) {\r\n        cameraDestinationX -= CAMERA_LOOKAHEAD * CELL_SIZE;\r\n      } else if (hero.movingPixelDirection === DIRECTION_RIGHT) {\r\n        cameraDestinationX += CAMERA_LOOKAHEAD * CELL_SIZE;\r\n      }\r\n    }\r\n\r\n    if (USE_SMOOTH_CAMERA) {\r\n      this.cameraX = Camera.lerp(\r\n        this.cameraX,\r\n        cameraDestinationX,\r\n        CAMERA_SPEED\r\n      );\r\n      this.cameraY = Camera.lerp(\r\n        this.cameraY,\r\n        cameraDestinationY,\r\n        CAMERA_SPEED\r\n      );\r\n    } else {\r\n      this.cameraX = cameraDestinationX;\r\n      this.cameraY = cameraDestinationY;\r\n    }\r\n  }\r\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,mBAAmB;AAC7C,SACEC,eAAe,EACfC,cAAc,EACdC,YAAY,EACZC,cAAc,QACT,mBAAmB;AAE1B,MAAMC,YAAY,GAAG,IAAI;AACzB,MAAMC,gBAAgB,GAAG,CAAC;AAC1B,MAAMC,iBAAiB,GAAG,IAAI;AAE9B,OAAO,MAAMC,MAAM,CAAC;EAClBC,WAAWA,CAACC,KAAK,EAAE;IACjB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,MAAM,CAACC,KAAK,EAAEC,KAAK,CAAC,GAAG,IAAI,CAACF,KAAK,CAACG,OAAO,CAACC,SAAS,CAAC,CAAC;IACrD,IAAI,CAACC,OAAO,GAAGJ,KAAK;IACpB,IAAI,CAACK,OAAO,GAAGJ,KAAK;EACtB;EAEA,IAAIK,SAASA,CAAA,EAAG;IACd,IAAI,CAACC,SAAS,GAAGC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,cAAc,CAAC;IAE5F,IAAI,CAACC,gBAAgB,GAAIC,MAAM,CAACC,UAAU,GAAG,CAAE;IAC/C,IAAI,CAACC,gBAAgB,GAAIF,MAAM,CAACG,WAAW,GAAG,CAAC,GAAK3B,SAAS,GAAG,CAAE;IAClE,OAAO,CAAC,IAAI,CAACe,OAAO,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACO,gBAAgB,EAAE,IAAI,CAACG,gBAAgB,CAAC;EACnF;EAEA,OAAOE,IAAIA,CAACC,YAAY,EAAEC,gBAAgB,EAAEC,IAAI,EAAE;IAChD,OAAOF,YAAY,IAAI,CAAC,GAAGE,IAAI,CAAC,GAAGD,gBAAgB,GAAGC,IAAI;EAC5D;EAEAC,IAAIA,CAAA,EAAG;IACL;IACA,MAAMC,IAAI,GAAG,IAAI,CAACvB,KAAK,CAACG,OAAO;IAC/B,MAAM,CAACF,KAAK,EAAEC,KAAK,CAAC,GAAGqB,IAAI,CAACnB,SAAS,CAAC,CAAC;IACvC,IAAIoB,kBAAkB,GAAGvB,KAAK;IAC9B,IAAIwB,kBAAkB,GAAGvB,KAAK;;IAE9B;IACA,IAAIqB,IAAI,CAACG,qBAAqB,GAAG,CAAC,EAAE;MAClC,IAAIH,IAAI,CAACI,oBAAoB,KAAKjC,cAAc,EAAE;QAChD+B,kBAAkB,IAAI7B,gBAAgB,GAAGN,SAAS;MACpD,CAAC,MAAM,IAAIiC,IAAI,CAACI,oBAAoB,KAAKlC,YAAY,EAAE;QACrDgC,kBAAkB,IAAI7B,gBAAgB,GAAGN,SAAS;MACpD,CAAC,MAAM,IAAIiC,IAAI,CAACI,oBAAoB,KAAKnC,cAAc,EAAE;QACvDgC,kBAAkB,IAAI5B,gBAAgB,GAAGN,SAAS;MACpD,CAAC,MAAM,IAAIiC,IAAI,CAACI,oBAAoB,KAAKpC,eAAe,EAAE;QACxDiC,kBAAkB,IAAI5B,gBAAgB,GAAGN,SAAS;MACpD;IACF;IAEA,IAAIO,iBAAiB,EAAE;MACrB,IAAI,CAACQ,OAAO,GAAGP,MAAM,CAACoB,IAAI,CACxB,IAAI,CAACb,OAAO,EACZmB,kBAAkB,EAClB7B,YACF,CAAC;MACD,IAAI,CAACW,OAAO,GAAGR,MAAM,CAACoB,IAAI,CACxB,IAAI,CAACZ,OAAO,EACZmB,kBAAkB,EAClB9B,YACF,CAAC;IACH,CAAC,MAAM;MACL,IAAI,CAACU,OAAO,GAAGmB,kBAAkB;MACjC,IAAI,CAAClB,OAAO,GAAGmB,kBAAkB;IACnC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}